{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anshj\\\\JsStuff\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from 'react';\nimport { useHistory, useLocation, useReactMatch } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n// sorting function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\n// component\nconst QuoteList = props => {\n  _s();\n  const history = useHistory();\n  const location = useLocation();\n\n  // default browser constructor, this helps us get the sort=asc from url\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  console.log(location);\n  function changeSortingHandler() {\n    history.push({\n      path: location.pathname,\n      search: `?sort=${isSortingAscending ? 'des' : 'asc'}`\n    });\n    // history.push('/quotes?sort=' + (isSortingAscending ? 'des' : 'asc'))\n  }\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","useReactMatch","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingAscending","get","console","log","changeSortingHandler","push","path","pathname","sortedQuotes","sorting","list","map","quote","author","text"],"sources":["C:/Users/anshj/JsStuff/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation, useReactMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n// sorting function\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\n// component\nconst QuoteList = (props) => {\n  const history = useHistory()\n  const location = useLocation()\n\n\n  // default browser constructor, this helps us get the sort=asc from url\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  console.log(location);\n\n  function changeSortingHandler() {\n    history.push({\n      path: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'des' : 'asc')}`\n    })\n    // history.push('/quotes?sort=' + (isSortingAscending ? 'des' : 'asc'))\n  }\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n\n  return (\n    <Fragment>\n    <div className={classes.sorting}>\n      <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n    </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,WAAW,EAAEC,aAAa,QAAQ,kBAAkB;AAEzE,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;;AAE5C;AAAA;AACA,MAAMC,UAAU,GAAG,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,IAAIH,SAAS,EAAE;MACb,OAAOE,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOF,MAAM,CAACE,EAAE,GAAGD,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAMC,OAAO,GAAGd,UAAU,EAAE;EAC5B,MAAMe,QAAQ,GAAGd,WAAW,EAAE;;EAG9B;EACA,MAAMe,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EAExD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAC5DC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EAErB,SAASQ,oBAAoB,GAAG;IAC9BT,OAAO,CAACU,IAAI,CAAC;MACXC,IAAI,EAAEV,QAAQ,CAACW,QAAQ;MACvBR,MAAM,EAAG,SAASC,kBAAkB,GAAG,KAAK,GAAG,KAAO;IACxD,CAAC,CAAC;IACF;EACF;;EAEA,MAAMQ,YAAY,GAAGtB,UAAU,CAACQ,KAAK,CAACP,MAAM,EAAEa,kBAAkB,CAAC;EAGjE,oBACE,QAAC,QAAQ;IAAA,wBACT;MAAK,SAAS,EAAEf,OAAO,CAACwB,OAAQ;MAAA,uBAC9B;QAAQ,OAAO,EAAEL,oBAAqB;QAAA,oBAAOJ,kBAAkB,GAAG,YAAY,GAAG,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAClG,eACJ;MAAI,SAAS,EAAEf,OAAO,CAACyB,IAAK;MAAA,UACzBF,YAAY,CAACG,GAAG,CAAEC,KAAK,iBACtB,QAAC,SAAS;QAER,EAAE,EAAEA,KAAK,CAACpB,EAAG;QACb,MAAM,EAAEoB,KAAK,CAACC,MAAO;QACrB,IAAI,EAAED,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACpB,EAAE;QAAA;QAAA;QAAA;MAAA,QAKhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEf,CAAC;AAAC,GAvCIC,SAAS;EAAA,QACGZ,UAAU,EACTC,WAAW;AAAA;AAAA,KAFxBW,SAAS;AAyCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}